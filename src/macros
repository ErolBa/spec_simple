

! this file, ext_m.F90, has been constructed by macro expansion; see ext.f90 for source;



m4_changequote({,})m4_dnl ; can put comments here;
m4_changecom(!)m4_dnl ; can put comments here;
m4_define(INTEGER,integer)m4_dnl ; can put comments here;
m4_define(REAL,real(8))m4_dnl ; can put comments here;
!m4_define(CHARACTER,character)m4_dnl ; can put comments here;
m4_define(GETTIME,MPI_WTIME())m4_dnl ; can put comments here;
m4_define(use mpi
  implicit none
  INTEGER   :: ierr, astat, ios, nthreads, ithread
  REAL      :: cput, cpui, cpuo=0,{! macro expansion of use mpi
  implicit none
  INTEGER   :: ierr, astat, ios, nthreads, ithread
  REAL      :: cput, cpui, cpuo=0;

#ifdef OPENMP
  USE OMP_LIB
#endif
  use mpi
  implicit none
  INTEGER   :: ierr, astat, ios, nthreads, ithread
  REAL      :: cput, cpui, cpuo=0 ! cpu time; cpu initial; cpu old; 31 Jan 13;

  ! macro expansion of use mpi
  implicit none
  INTEGER   :: ierr, astat, ios, nthreads, ithread
  REAL      :: cput, cpui, cpuo=0; end;})m4_dnl ; can put comments here;

m4_define(SALLOCATE,{ ! macro expansion of sallocate = set allocate;
! allocate a variable of name _1 in the range _2 and set the value to _3


   if( allocated( $1 ) ) deallocate( $1 )

   allocate( $1$2, stat=astat )



   $1$2 = $3

  ! macro expansion of sallocate; end;})m4_dnl ; can put comments here;
m4_define(FATAL,{! macro expansion of fatal;
! called from within _1; check logical expression in _2 and exit with reason _3 if the expression _2 is true
   if( $2 ) then
     write(6,'("$1 :      fatal : myid=",i3," ; $2 ; $3;")') myid
     call MPI_ABORT( MPI_COMM_SPEC, 1, ierr )
     stop "$1 : $2 : $3 ;"
    endif

  ! macro expansion of fatal; end;})m4_dnl ; can put comments here;
m4_define(LlBCAST,{! macro expansion of llbcast;
! logical MPI broadcast of _1; length is _2; what is _3 ?



   call MPI_BCAST($1,$2,MPI_LOGICAL,$3,MPI_COMM_SPEC,ierr)

  ! macro expansion of llbcast; end;})m4_dnl can put comments here
m4_define(IlBCAST,{! macro expansion of ilbcast;
! integer MPI broadcast of _1; length is _2; what is _3 ?


  
   call MPI_BCAST( $1, $2, MPI_INTEGER, $3, MPI_COMM_SPEC, ierr )


  ! macro expansion of ilbcast; end;})m4_dnl can put comments here
m4_define(RlBCAST,{! macro expansion of rlbcast;
! real MPI broadcast of _1; length is _2; _3 is radial volume which is worked on

  
   call MPI_BCAST($1,$2,MPI_DOUBLE_PRECISION,$3,MPI_COMM_SPEC,ierr)


  ! macro expansion of rlbcast; end;})m4_dnl can put comments here